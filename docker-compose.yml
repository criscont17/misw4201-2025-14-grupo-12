services:
  rabbitmq:
    build: ./rabbitmq
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - microservices-net

  validador:
    build: ./validador
    container_name: validador
    ports:
      - "5001:5000" # Validador
    environment:
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - rabbitmq
    networks:
      - microservices-net

  pedidos1:
    build: ./pedidos
    container_name: pedidos1
    ports:
      - "5002:5001"
    environment:
      - INSTANCE_NUMBER=1
      - RABBITMQ_HOST=rabbitmq
      - PYTHONUNBUFFERED=1
    depends_on:
      - rabbitmq
    networks:
      - microservices-net

  pedidos2:
    build: ./pedidos
    container_name: pedidos2
    ports:
      - "5003:5002"
    environment:
      - INSTANCE_NUMBER=2
      - RABBITMQ_HOST=rabbitmq
      - PYTHONUNBUFFERED=2
    depends_on:
      - rabbitmq
    networks:
      - microservices-net

  pedidos3:
    build: ./pedidos
    container_name: pedidos3
    ports:
      - "5004:5003"
    environment:
      - INSTANCE_NUMBER=3
      - RABBITMQ_HOST=rabbitmq
      - PYTHONUNBUFFERED=3
    depends_on:
      - rabbitmq
    networks:
      - microservices-net

  autorizador:
    build: ./autorizador
    container_name: autorizador
    ports:
      - "5005:5005"
    environment:
      - SECRET_KEY=mysecretkey
    networks:
      - microservices-net

  certificador:
    build: ./certificador
    container_name: certificador
    ports:
      - "5006:5006"
    networks:
      - microservices-net

  nginx:
    image: nginx:latest
    container_name: api-gateway
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - validador
      - pedidos1
      - pedidos2
      - pedidos3
      - autorizador
      - certificador
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge
